/**
 * 
 */
package examples;

import java.io.File;
import java.util.Iterator;
import java.util.Map;

import polyglot.ast.Stmt;
import soot.Body;
import soot.BodyTransformer;
import soot.PackManager;

/**
 * @author islamazhar
 *
 */

import soot.Scene;
import soot.SootClass;
import soot.Transform;
import soot.Unit;
import soot.options.Options;

public class CreateJimple extends BodyTransformer{

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		
		String mainclass = "ppa.HelloThread";
		
		//String javaHome = System.getenv("JAVA_HOME");

		String javapath = System.getProperty("java.class.path");
		String jredir = System.getProperty("java.home")+"/lib/rt.jar";
        String path = javaHome+File.pathSeparator+jredir;
        System.out.println(path);
        Scene.v().setSootClassPath(path);

        //add an intra-procedural analysis phase to Soot
        CreateJimple analysis = new CreateJimple();
        PackManager.v().getPack("jtp").add(new Transform("jtp.TestSoot", analysis));

        //load and set main class
        Options.v().set_app(true);
        SootClass appclass = Scene.v().loadClassAndSupport(mainclass);
        Scene.v().setMainClass(appclass);
        Scene.v().loadNecessaryClasses();

        //start working
        PackManager.v().runPacks();
        
      
	}

	@Override
	protected void internalTransform(Body b, String phaseName, Map options) {
			Iterator<Unit> it = b.getUnits().snapshotIterator();
		    while(it.hasNext()){
		    	Stmt stmt = (Stmt)it.next();

		    	System.out.println(stmt);
		    }
	}

}
