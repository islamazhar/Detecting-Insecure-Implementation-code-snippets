public class test.ppa.C extends java.lang.Object
{

    private byte[] encrypt(byte[], byte[]) throws java.lang.Exception
    {
        test.ppa.C this;
        byte[] raw, clear, encrypted; // raw and clear are input params encrypt is what is returned
        test.ppa.SecretKeySpec skeySpec, $r0; // local automatic variables. eventuall skeySpec = $ro
        test.ppa.Cipher cipher, $r1; // local automatic variables
        MMAGICPPACKAGE.MagicClass $r2;

        this := @this: test.ppa.C;
        raw := @parameter0: byte[];
        clear := @parameter1: byte[];
        $r0 = new test.ppa.SecretKeySpec;
        specialinvoke $r0.<test.ppa.SecretKeySpec: void <init>(byte[],java.lang.String)>(raw, "AES"); // <init> is something I don't have implementatin available. specialinvoke is also a interesting keyword need to know about that.
        skeySpec = $r0;
        cipher = staticinvoke <test.ppa.Cipher: test.ppa.Cipher getInstance(java.lang.String)>("AES"); 
        $r2 = $r1.<test.ppa.Cipher: MMAGICPPACKAGE.MagicClass ENCRYPT_MODE>;
        virtualinvoke cipher.<test.ppa.Cipher: MMAGICPPACKAGE.MagicClass init(MMAGICPPACKAGE.MagicClass,test.ppa.SecretKeySpec)>($r2, skeySpec);
        encrypted = virtualinvoke cipher.<test.ppa.Cipher: byte[] doFinal(byte[])>(clear);
        return encrypted;
    }

    public void <init>()
    {
        test.ppa.C this;

        this := @this: test.ppa.C;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }
}
